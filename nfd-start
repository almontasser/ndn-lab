#!/bin/bash

VERSION="0.4.1"

/usr/sbin/sshd -D &

FOREGROUND=false
case "$1" in
  -h)
    echo Usage
    echo $0" [-d]"
    echo "  Start NFD"
    echo " -f run in foreground"
    exit 0
    ;;
  -V)
    echo $VERSION
    exit 0
    ;;
  -f)
    FOREGROUND=true
    ;;
  "") ;; # do nothing
  *)
    echo "Unrecognized option $1"
    exit 1
    ;;
esac

hasProcess() {
  local processName=$1

  if pgrep -x $processName >/dev/null
  then
    echo $processName
  fi
}

hasNFD=$(hasProcess nfd)

if [[ -n $hasNFD ]]
then
  echo 'NFD is already running...'
  exit 1
fi

if ! ndnsec-get-default &>/dev/null
then
  ndnsec-key-gen /localhost/operator | ndnsec cert-install -
fi

/usr/local/bin/nfd &
NFD_PID=$!

if [ -f /usr/local/etc/ndn/nfd-init.sh ]; then
  sleep 2 # post-start is executed just after nfd process starts, but there is no guarantee
  # that all initialization has been finished
  . /usr/local/etc/ndn/nfd-init.sh
fi

if [ -f /usr/local/etc/ndn/autoconfig.conf ]; then
  sleep 2 # post-start is executed just after nfd process starts, but there is no guarantee
  /usr/local/bin/ndn-autoconfig -d -c "/usr/local/etc/ndn/autoconfig.conf" &
fi

# nfdc route add /ndn udp://172.100.100.101:6363
# nfdc route add /ndn udp://172.100.100.102:6363
# nfdc route add /ndn udp://172.100.100.103:6363
# nfdc route add /ndn udp://172.100.100.104:6363

sleep 1

nfdc route add /ndn1 udp://172.100.100.101:6363
nfdc route add /ndn2 udp://172.100.100.102:6363
nfdc route add /ndn3 udp://172.100.100.103:6363
nfdc route add /ndn4 udp://172.100.100.104:6363
nfdc route add /client udp://172.100.100.201:6363

sleep 1

nfdc strategy set /ndn/group /localhost/nfd/strategy/multicast

nfdc route add 


if $FOREGROUND
then
  wait $NFD_PID
fi

